import { LoadOptions } from 'js-yaml';
export declare type EnvVarResolver = (key: string) => any;
export declare type EnvVariables = Record<string, any> | EnvVarResolver;
export interface readYamlOptions {
    jsYaml?: LoadOptions;
}
/**
 * Replace env refs in yaml to values
 * @param {string | string[]} filePath path to yaml file
 * @param {{ jsyaml: LoadOptions }} options options
 * @param {Object<*>} customEnv custom environment object
 * @returns {Record<string, any>}
 */
export declare const readYamlEnvSync: <T extends Record<string, any>>(filePath: string | string[], customEnv?: Record<string, any> | EnvVarResolver | undefined, options?: readYamlOptions | undefined) => T;
/**
 * Replace env refs in yaml to values async
 * @param {string | string[]} filePath path to yaml file
 * @param {{ jsyaml: LoadOptions }} options options
 * @param {Object<*>} customEnv custom environment object
 * @returns {Promise<Record<string, any>>}
 */
export declare const readYamlEnv: <T extends Record<string, any>>(filePath: string | string[], customEnv?: Record<string, any> | EnvVarResolver | undefined, options?: readYamlOptions | undefined) => Promise<T>;
